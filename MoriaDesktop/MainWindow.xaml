<Window x:Class="MoriaDesktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MoriaDesktop"
        xmlns:models="clr-namespace:MoriaDesktop.Models"
        xmlns:lottie="clr-namespace:LottieSharp.WPF;assembly=LottieSharp"
        xmlns:transforms="clr-namespace:LottieSharp.WPF.Transforms;assembly=LottieSharp"
        xmlns:converters="clr-namespace:MoriaDesktop.Styles.Converters"
        mc:Ignorable="d" 
        Height="450" Width="800"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        Background="Transparent" 
        BorderThickness="0"
        BorderBrush="Transparent"
        Loaded="Window_Loaded">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="bool2vis"/>
        <converters:BoolToVisibilityInvertedConverter x:Key="bool2visinv"/>
        <converters:InvertBoolConverter x:Key="invbool"/>
        <converters:DebugConverter x:Key="debugconv"/>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding Content.DataContext.SaveCommand, ElementName=NavigationFrame}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding Content.DataContext.SaveAndCloseCommand, ElementName=NavigationFrame}"/>
        <KeyBinding Key="Esc" Command="{Binding Content.DataContext.CloseCommand, ElementName=NavigationFrame}"/>
        <KeyBinding Key="F4" Command="{Binding Content.DataContext.EditCommand, ElementName=NavigationFrame}"/>
        <KeyBinding Key="F8" Command="{Binding Content.DataContext.InvokeFocusCommand, ElementName=NavigationFrame}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding Content.DataContext.OpenCommand, ElementName=NavigationFrame}"/>
    </Window.InputBindings>

    <Grid Background="{StaticResource WindowDefaultBackgroundBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="55"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="35"/>
        </Grid.RowDefinitions>
        <!--#region Navigation panel-->

        <Grid Background="{StaticResource WindowDefaultBackgroundBrush}"
              Grid.RowSpan="3"
              HorizontalAlignment="Stretch"
              Opacity="{StaticResource MainWindowOpacityValue}"/>

        <Grid x:Name="MenuGrid"
              Grid.RowSpan="3">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--#region Titlebar-->

            <Grid Height="55"
                  VerticalAlignment="Top"
                  Margin="0, 0, 0, 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="2" 
                        Background="{StaticResource MainWindowAccentBrush}"
                        Height="35"
                        CornerRadius="3, 0, 0, 3"
                        Width="6"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right"/>

                <TextBlock x:Name="TitleTextBlock"
                           Grid.Column ="1" 
                           Text="MoriaDesktop"
                           Foreground="{StaticResource DefaultForeground}"
                           FontSize="20"
                           Margin="0 0 5 0"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Right"/>

                <Button x:Name="ExpandButton"
                        BorderThickness="0"
                        BorderBrush="LightGray"
                        Margin="10 0 0 0"
                        Width="35"
                        Height="35"
                        Click="ExpandButton_Click"
                        Background="{StaticResource MainWindowAccentBrush}">
                    <Button.Content>
                        <Image Source="Images/menu.png" 
                               Stretch="Uniform"
                               Width="20"/>
                    </Button.Content>
                </Button>
            </Grid>

            <!--#endregion-->

            <!--#region  Main menu-->

            <TreeView x:Name="NavigationTreeView"
                      Grid.Row="1"
                      Grid.RowSpan="1"
                      ItemsSource="{Binding Navigation, Mode=OneWay}"
                      Background="Transparent" 
                      BorderThickness="0"
                      Margin="10 20 0 10" 
                      HorizontalAlignment="Stretch"
                      HorizontalContentAlignment="Stretch"
                      SelectedItemChanged="TreeView_SelectedItemChanged"
                      ScrollViewer.HorizontalScrollBarVisibility="Hidden" MouseLeftButtonUp="NavigationTreeView_MouseLeftButtonUp"
                      Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}">
                <TreeView.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="Transparent" />
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />

                    <Style TargetType="TreeViewItem">
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    </Style>

                </TreeView.Resources>
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Items}">
                        <Border Width="130"  BorderThickness="0" Height="40" HorizontalAlignment="Stretch" CornerRadius="3" Margin="3">
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Setter Property="Background" Value="{StaticResource MainWindowAccentBrush}"/>
                                    <Setter Property="BorderBrush" Value="#CB9DF0" />

                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="#D4F6FF" />
                                            <Setter Property="BorderBrush" Value="#37AFE1" />
                                        </Trigger>

                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                            <Setter Property="Background" Value="#D4F6FF" />
                                            <Setter Property="BorderBrush" Value="#37AFE1" />
                                            <!--<Setter Property="Effect">
                                                <Setter.Value>
                                                    <DropShadowEffect BlurRadius="5" Color="#BFECFF" Opacity="0.7" ShadowDepth="3"/>
                                                </Setter.Value>
                                            </Setter>-->
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid VerticalAlignment="Center">
                                <TextBlock Text="{Binding Title}" Margin="10" FontSize="12" FontWeight="SemiBold"/>
                            </Grid>
                        </Border>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

                <!--<TreeView.ItemContainerStyle>
                    <Style TargetType="TreeViewItem">
                        -->
                <!-- Default Background Color -->
                <!--
                        <Setter Property="Background" Value="Transparent" />
                        -->
                <!-- Style triggers for the selected item -->
                <!--
                        <Style.Triggers>
                            -->
                <!-- Change the background when the item is selected -->
                <!--
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Black" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>-->
            </TreeView>

            <Viewbox Grid.Row="2" Stretch="Uniform" StretchDirection="DownOnly" Margin="10">


               <!-- <Calendar x:Name="myCalendar"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Stretch"
                          Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}"
                          SelectedDatesChanged="myCalendar_SelectedDatesChanged">
                    <Calendar.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource CalendarHeaderButtonStyle}"/>
                    </Calendar.Resources>
                </Calendar>  -->

                <StackPanel Orientation="Vertical" HorizontalAlignment="Center">

                    <!-- Pasek wyszukiwania -->
                    <StackPanel Orientation="Horizontal" Margin="0,0,0,10" VerticalAlignment="Center" HorizontalAlignment="Center"
                                 Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}">
                        <TextBox x:Name="SearchBox"
                     Width="200"
                     Height="25"
                     VerticalAlignment="Center"
                                 KeyDown="SearchBox_KeyDown"
                     Margin="0,0,10,0" />
                        <Button Width="30" Height="30" Click="SearchButton_Click">
                            <Viewbox Width="16" Height="16">
                                <Path Data="M15.5,14.1 L11.9,10.5 C12.5,9.6 12.9,8.5 12.9,7.3 C12.9,3.3 9.6,0 5.6,0 C1.6,0 -1.7,3.3 -1.7,7.3 C-1.7,11.3 1.6,14.6 5.6,14.6 C6.8,14.6 7.9,14.2 8.8,13.6 L12.4,17.2 C12.8,17.6 13.5,17.6 13.9,17.2 C14.3,16.8 14.3,16.1 13.9,15.7 L15.5,14.1 Z M2,7.3 C2,4.4 4.4,2 7.3,2 C10.2,2 12.6,4.4 12.6,7.3 C12.6,10.2 10.2,12.6 7.3,12.6 C4.4,12.6 2,10.2 2,7.3 Z"
                          Fill="Black"/>
                            </Viewbox>
                        </Button>
                    </StackPanel>

                    <!-- Kalendarz -->
                    <Calendar x:Name="myCalendar"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Stretch"
                  Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}"
                  SelectedDatesChanged="myCalendar_SelectedDatesChanged">
                        <Calendar.Resources>
                            <Style TargetType="Button" BasedOn="{StaticResource CalendarHeaderButtonStyle}"/>
                        </Calendar.Resources>
                    </Calendar>
                </StackPanel>
            </Viewbox>





        <StackPanel x:Name="FooterButtonsPanel"
                        Grid.Row="3"
                        Margin="10 0 0 5"
                        Orientation="Horizontal"
                        HorizontalAlignment="Left">
                <Button x:Name="SettingsButton"
                        BorderThickness="0"
                        BorderBrush="LightGray"
                        Margin="0 0 5 5"
                        Width="35"
                        Height="35"
                        Command="{Binding ImportOrdersCommand}"
                        Visibility="{Binding IsAdminViewing, Mode=OneWay, Converter={StaticResource bool2vis}}"
                        Background="{StaticResource MainWindowAccentBrush}">
                    <Button.Content>
                        <Image Source="Images/import.png" 
                               Stretch="Uniform"
                               Width="20"/>
                    </Button.Content>
                </Button>
                <Button x:Name="LogoutButton"
                        BorderThickness="0"
                        BorderBrush="LightGray"
                        Margin="0 0 5 5"
                        Width="35"
                        Height="35"
                        
                        Command="{Binding LogoutCommand}"
                        Background="{StaticResource MainWindowAccentBrush}">
                    <Button.Content>
                        <Image Source="Images/logout2.png" 
                               Stretch="Uniform"
                               Width="20"/>
                    </Button.Content>
                </Button>
            </StackPanel>
            
            <!--#endregion-->

        </Grid>

        <!--#endregion-->

        <!--#region top ribbon section-->

        <Grid Background="{StaticResource WindowDefaultBackgroundBrush}"
              Opacity="{StaticResource MainWindowOpacityValue}"
              Grid.Column="1"
              Margin="0 5 0 0"
              Height="55"/>
        <Border Grid.Column="1"
                Height="35" MouseDown="Border_MouseDown"
                HorizontalAlignment="Stretch"
                Background="{StaticResource MainWindowAccentBrush}"/>
        <Grid Grid.Column="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="30"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="160"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="BackButton" 
                HorizontalAlignment="Left"
                Command="{Binding GoBackCommand, Mode=OneWay}"
                Style="{StaticResource MainWindowTopRibbonButtonStyle}"
                Visibility="{Binding IsEnabled, ElementName=BackButton, Converter={StaticResource bool2vis}}">
                <Button.Content>
                    <Image Source="Images/back.png" 
                       Stretch="Uniform"
                       Width="15"/>
                </Button.Content>
            </Button>
            <TextBlock Grid.ColumnSpan="3"
                       Margin="0 0 0 0"
                       HorizontalAlignment="Center"
                       VerticalAlignment="Center"
                       Text="{Binding PageTitle, Mode=OneWay}"
                       FontSize="20"/>
            <StackPanel Grid.Column="2"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right"
                    Margin="0 0 7 0">
                <Button x:Name="HideButton"
                    Style="{StaticResource MainWindowTopRibbonButtonStyle}"
                    Click="HideButton_Click"
                    Margin="0 0 3 0">
                    <Button.Content>
                        <Image Source="Images/windowHide.png" 
                           Stretch="Uniform"
                           Width="15"/>
                    </Button.Content>
                </Button>
                <Button x:Name="MaximizeButton"
                    Style="{StaticResource MainWindowTopRibbonButtonStyle}"
                    Command="{Binding SetFullScreenCommand, Mode=OneWay}"
                    Visibility="{Binding IsFullScreen, Mode=OneWay, Converter={StaticResource bool2visinv}}"
                    Click="MaximizeButton_Click"
                    Margin="0 0 3 0">
                    <Button.Content>
                        <Image Source="Images/maximize.png" 
                           Stretch="Uniform"
                           Width="15"/>
                    </Button.Content>
                </Button>
                <Button x:Name="MinimizeButton"
                    Style="{StaticResource MainWindowTopRibbonButtonStyle}"
                    Command="{Binding SetWindowCommand, Mode=OneWay}"
                    Visibility="{Binding IsFullScreen, Mode=OneWay, Converter={StaticResource bool2vis}}"
                    Click="MinimizeButton_Click"
                    Margin="0 0 3 0">
                    <Button.Content>
                        <Image Source="Images/minimize.png" 
                           Stretch="Uniform"
                           Width="15"/>
                    </Button.Content>
                </Button>
                <Button x:Name="CloseButton"
                    Style="{StaticResource MainWindowTopRibbonButtonStyle}"
                    Command="{Binding CloseAppCommand, Mode=OneWay}"
                    Click="CloseButton_Click"
                    Margin="0 0 3 0">
                    <Button.Content>
                        <Image Source="Images/close.png" 
                           Stretch="Uniform"
                           Width="15"/>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>

        <!--#endregion-->

        <!--#region content section-->

        <!--<Border Grid.Column="1" 
                Grid.Row="1"
                Background="{StaticResource WindowDefaultBackgroundBrush}"
                Opacity="1"
                Margin="5 5 10 5"
                Padding="10"
                CornerRadius="10">-->
        <Border Grid.Column="1" 
                Grid.Row="1"
                Background="{StaticResource WindowDefaultBackgroundBrush}"
                Opacity="1"
                Margin="0 0 0 0"
                Padding="0"
                BorderBrush="DimGray"
                BorderThickness="0.3 0.3 0 0.3"
                CornerRadius="5 0 0 0">
            <Grid>
            <!--<Border.Effect>
                <DropShadowEffect BlurRadius="10" Direction="225" Color="LightGray" Opacity="0.7" ShadowDepth="10"/>
            </Border.Effect>-->

                <TabControl x:Name="TabControl" 
                            SelectionChanged="TabControl_SelectionChanged">
                    <TabItem>
                        <Frame x:Name="NavigationFrame"
                   IsEnabled="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource invbool}}"
                   NavigationUIVisibility="Hidden"/>
                    </TabItem>
                    <TabItem Header="Pusta strona"
                             Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}">
                        <Frame x:Name="NavigationFrame2"
                   IsEnabled="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource invbool}}"
                   NavigationUIVisibility="Hidden"/>
                    </TabItem>
                    <TabItem Header="Pusta strona"
                             Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}">
                        <Frame x:Name="NavigationFrame3"
                   IsEnabled="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource invbool}}"
                   NavigationUIVisibility="Hidden"/>
                    </TabItem>
                </TabControl>
                
            <!--<Frame x:Name="NavigationFrame"
                   IsEnabled="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource invbool}}"
                   NavigationUIVisibility="Hidden"/>-->
                <StackPanel Orientation="Vertical"
                            HorizontalAlignment="Center" 
                            VerticalAlignment="Center"
                            Visibility="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource bool2vis}}">
                    <lottie:LottieAnimationView Width="60"
                                                Height="60"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                AutoPlay="True"
                                                ResourcePath="pack://application:,,,/Images/loading2.json"
                                                RepeatCount="-1">

                    </lottie:LottieAnimationView>
                    <TextBlock Text="{Binding LoadingText, Mode=OneWay}"
                               FontWeight="Regular"
                               HorizontalAlignment="Center"
                               Margin="0 10 0 0"/>
                </StackPanel>
            </Grid>
        </Border>

        <!--#endregion-->

        <!--#region status bar-->

        <StatusBar Grid.Column="1"
                   Grid.Row="2"
                   Background="{StaticResource WindowDefaultBackgroundBrush}"
                   Opacity="{StaticResource MainWindowOpacityValue}"
                   Margin="0 0 0 0"
                   BorderBrush="LightGray"
                   BorderThickness="0.7 0 0 0"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch">
            <StatusBar.Resources>
                <converters:SystemInfoStatusToBrushConverter x:Key="status2brush"/>
            </StatusBar.Resources>
            <StatusBarItem HorizontalAlignment="Left">
                <TextBlock Text="{Binding Username, Mode=OneWay, StringFormat={}Użytkownik: {0}}"
                           Visibility="{Binding IsLoggedIn, Mode=OneWay, Converter={StaticResource bool2vis}}"
                           FontWeight="Light"
                           Margin="10 0 10 0"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Stretch"
                           HorizontalContentAlignment="Stretch">
                <Grid VerticalAlignment="Stretch"
                      HorizontalAlignment="Stretch">
                    <!--<Grid Visibility="{Binding IsLoadingVisible, Mode=OneWay, Converter={StaticResource bool2vis}}">
                        <TextBlock Text="{Binding LoadingText, Mode=OneWay}"
                                   FontWeight="Light"
                                   HorizontalAlignment="Right"
                                   Margin="10 0 10 0"/>
                    </Grid>-->
                    <Grid Background="{Binding InfoStatus, Mode=OneWay, Converter={StaticResource status2brush}}"
                          Visibility="{Binding IsInfoVisible, Mode=OneWay, Converter={StaticResource bool2vis}}"
                          HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="{Binding InfoText, Mode=OneWay}"
                               FontWeight="Light"
                                   HorizontalAlignment="Right"
                               Margin="10 0 5 0"/>
                        <Button x:Name="CloseInfoButton" 
                            Style="{StaticResource MainWindowTopRibbonButtonStyle}" 
                            Command="{Binding CloseInfoCommand, Mode=OneWay}"
                            Grid.Column="1"
                            Height="20"
                            Width="20"
                            Margin="0 0 5 0">
                            <Button.Content>
                                <Image Source="Images/close.png" 
                                   Stretch="Uniform"
                                   Width="10"/>
                            </Button.Content>
                        </Button>
                    </Grid>
                </Grid>
            </StatusBarItem>
        </StatusBar>

        <!--#endregion-->

    </Grid>
</Window>
